const UserRegistered = require('../userRegistered');

describe('UserRegistered entities', () => {
  it('should throw error when payload does not contain needed properties', () => {
    // registered user entities should contain id, username, fullname
    const payload = {
      username: 'fahru',
      fullname: 'Dicoding Indonesia',
    };

    expect(() => new UserRegistered(payload)).toThrowError('USER_REGISTERED.NOT_CONTAIN_NEEDED_PROPERTY');
  });

  it('shoud throw error when payload does not contain valid value', () => {
    // id will be generated by nanoid so it should be a string
    const payload = {
      id: 1,
      username: 'fahru',
      fullname: 'Dicoding Indonesia',
    };

    expect(() => new UserRegistered(payload)).toThrowError('USER_REGISTERED.NOT_MEET_DATA_TYPE_SPECIFICATION');
  });

  it('should create UserRegistered entities correctly', () => {
    const payload = {
      id: 'user-123-456',
      username: 'fahru',
      fullname: 'Dicoding Indonesia',
    };

    const userRegistered = new UserRegistered(payload);
    expect(userRegistered).toBeInstanceOf(UserRegistered);
    expect(userRegistered.id).toEqual(payload.id);
    expect(userRegistered.username).toEqual(payload.username);
    expect(userRegistered.fullname).toEqual(payload.fullname);
  });
});
